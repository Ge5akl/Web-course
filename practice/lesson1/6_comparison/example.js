// Логические значения
alert( 2 > 1 ); // true, верно
alert( 2 == 1 ); // false, неверно
alert( 2 != 1 ); // true

var a = true; // присваивать явно
var b = 3 > 4; // или как результат сравнения
alert( b ); // false
alert( a == b ); // (true == false) неверно, выведет false


// Сравнение строк.
// В JavaScript используется кодировка Unicode.
alert( 'Б' > 'А' ); // true
alert( 'а' > 'Я' ); // true, строчные буквы больше прописных

alert( 'Банан' > 'Аят' ); // true, т.к. 'Б' > 'А'
alert( 'Вася' > 'Ваня' ); // true, т.к. 'с' > 'н'
alert( 'Привет' > 'Прив' ); // true, так как 'е' больше чем "ничего".


// Сравнение разных типов.
alert( '2' > 1 ); // true, сравнивается как 2 > 1
alert( '01' == 1 ); // true, сравнивается как 1 == 1
alert( false == 0 ); // true, false становится числом 0
alert( true == 1 ); // true, так как true становится числом 1


// Операторы строгого равенства и неравенства
// Простым равенством невозможно отличить, т.к. операнды разных типов преобразовываются к числу.
// Пустая строка, как и false, при преобразовании к числу дают 0.
alert( 0 == false ); // true
alert( '' == false ); // true

// В этом случае используем строгое равенство.
alert( 0 === false ); // false, т.к. типы различны
alert( '' === false ); // false, т.к. типы различны


// Особенности сравнения с null.
// Это особенность JavaScript, надо запомнить.
alert( null > 0 ); // false
alert( null == 0 ); // false
alert(null >= 0); // true


// Особенности сравнения с undefined.
// Это особенность JavaScript, надо запомнить.
alert( undefined > 0 ); // false
alert( undefined < 0 ); // false
alert( undefined == 0 ); // false